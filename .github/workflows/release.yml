name: Release
on:
  release:
    types: [created]
jobs:
  pack:
    name: Pack source tarball
    runs-on: ubuntu-latest
    steps:
      - name: Clone repo
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Create source tarball
        run: |
          SOURCE_NAME=$(awk -F/ '{print $NF}' <<<"${{ github.repository }}")-$(awk -F/ '{print $NF}' <<<"${{ github.ref }}")
          git ls-files --recurse-submodules | \
          tar --exclude-vcs --transform "s|^|$SOURCE_NAME/|S" -ca -T - -f ../$SOURCE_NAME-source.tar.gz
      - name: Upload source tarball
        uses: AButler/upload-release-assets@v2.0
        with:
          files: '../*.tar.gz'
          repo-token: ${{ secrets.GITHUB_TOKEN }}

  release:
    name: Release
    strategy:
      matrix:
        os: [ubuntu-18.04]
        arch: [amd64]
        include:
          - os: ubuntu-18.04
            extra-cmake-arguments: >-
              -D CPACK_GENERATOR="External"
              -D WITH_KWAYLAND:BOOL=OFF

    runs-on: ${{ matrix.os }}
    steps:
      - name: Clone repo
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Install apt packages
        if: runner.os == 'Linux' && matrix.arch == 'amd64'
        run: |
          sudo apt-get update
          sudo apt-get install extra-cmake-modules libqt5x11extras5-dev qttools5-dev qtmultimedia5-dev libkf5wayland-dev libtesseract-dev rpm qt5-default qtgstreamer-plugins-qt5 gstreamer1.0-plugins-good gstreamer1.0-alsa gstreamer1.0-pulseaudio libqt5multimedia5-plugins qt5-style-plugins ninja-build
          sudo apt-get remove qt5-gtk-platformtheme # Do not use libqgtk3.so because of https://bugreports.qt.io/browse/QTBUG-72506

      - name: Install linuxdeploy
        if: matrix.os == 'ubuntu-18.04'
        uses: miurahr/install-linuxdeploy-action@v1
        with:
          plugins: qt gstreamer

      - name: Build
        if: matrix.arch == 'amd64'
        run: |
          cmake -B build -G Ninja -D CMAKE_BUILD_TYPE=Release ${{ matrix.extra-cmake-arguments }}
          cmake --build build --target package --parallel 2 --config Release

      - name: Upload Appimage
        uses: AButler/upload-release-assets@v2.0
        with:
          files: build/{*.AppImage,*.AppImage.zsync}
          repo-token: ${{ secrets.GITHUB_TOKEN }}
